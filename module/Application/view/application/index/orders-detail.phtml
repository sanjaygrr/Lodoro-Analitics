<?php
/**
 * @var Laminas\View\Renderer\PhpRenderer $this
 */
$this->headTitle('Gestión de Órdenes');

// Configuración de marketplaces
$marketplaceDetails = [
    'WALLMART' => ['name' => 'Walmart', 'color' => '#0071ce'],
    'RIPLEY' => ['name' => 'Ripley', 'color' => '#e60000'],
    'FALABELLA' => ['name' => 'Falabella', 'color' => '#0a4a90'],
    'MERCADO_LIBRE' => ['name' => 'Mercado Libre', 'color' => '#ffe600'],
    'PARIS' => ['name' => 'Paris', 'color' => '#e71785'],
    'WOOCOMMERCE' => ['name' => 'WooCommerce', 'color' => '#7f54b3']
];

// Asegurar que $table esté definido
$table = $table ?? '';

// Obtener marketplace actual
$marketplace = isset($table) && $table !== 'all' ? str_replace('Orders_', '', $table) : 'TODOS';
$marketplace = strtoupper($marketplace);

// Configurar nombre y color del marketplace
$displayName = $marketplaceDetails[$marketplace]['name'] ?? 'Todos los Marketplaces';
$marketColor = $marketplaceDetails[$marketplace]['color'] ?? '#4361ee';

// Asegurar que $orders esté definido como un array
$orders = $orders ?? [];

// Obtener valores de filtros actuales (para mantenerlos en links)
$currentPrinted = $printedFilter ?? '';
$currentStatus = $statusFilter ?? '';

// Usar los contadores enviados desde el controlador
// En lugar de calcularlos en la vista
?>

<div class="container-fluid">
    <!-- Cabecera de la página con título y botones principales -->
    <div class="row mb-4">
        <div class="col-md-6">
            <h1 class="h3 mb-2">Gestión de Órdenes: <?= $this->escapeHtml($displayName) ?></h1>
            <p class="text-muted">Administra todas las órdenes de tus diferentes marketplaces en un solo lugar.</p>
        </div>
        <div class="col-md-6 text-end">
            <div class="d-flex justify-content-md-end gap-2">
                <a href="<?= $this->url('application', ['action' => 'marketplace-config']) ?>" class="btn btn-outline-secondary">
                    <i class="fas fa-cogs me-1"></i> Configuración
                </a>
            </div>
        </div>
    </div>

    <!-- TARJETAS DE ESTADO: Dashboard Superior usando contadores de la base de datos -->
    <div class="row mb-4">
        <div class="col-md-12">
            <div class="card">
                <div class="card-body p-0">
                    <div class="row g-0 text-center">
                        <!-- Tarjeta 1: No Impresos (Sin Imprimir) -->
                        <div class="col-md-4 border-end">
                            <div class="p-3">
                                <h5 class="fw-semibold mb-1 text-primary"><?= number_format($sinImprimir) ?></h5>
                                <span class="text-muted">Sin Imprimir</span>
                                <?php if ($currentPrinted !== '0' && $sinImprimir > 0): ?>
                                <?php endif; ?>
                            </div>
                        </div>

                        <!-- Tarjeta 2: Impresos pero No Procesados -->
                        <div class="col-md-4 border-end">
                            <div class="p-3">
                                <h5 class="fw-semibold mb-1 text-warning"><?= number_format($impresosNoProcesados) ?></h5>
                                <span class="text-muted">Pendientes a Procesar</span>
                                <?php if (($currentPrinted !== '1' || $currentStatus !== 'Nueva') && $impresosNoProcesados > 0): ?>

                                <?php endif; ?>
                            </div>
                        </div>

                        <!-- Tarjeta 3: Procesados -->
                        <div class="col-md-4">
                            <div class="p-3">
                                <h5 class="fw-semibold mb-1 text-success"><?= number_format($procesados) ?></h5>
                                <span class="text-muted">Procesados</span>
                                <?php if ($currentStatus !== 'En Proceso' && $procesados > 0): ?>
                                <div class="mt-2">
                                    <a href="<?= $this->url('application', ['action' => 'orders-detail', 'table' => $table], ['query' => ['status' => 'En Proceso']]) ?>" class="btn btn-sm btn-outline-success">
                                        Ver pedidos
                                    </a>
                                </div>
                                <?php endif; ?>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
  
    <!-- Filtros y botones de acción mejorados -->
    <div class="row mb-4">
        <div class="col-md-12">
            <div class="card order-filters-card">
                <div class="card-body">
                    <div class="d-flex flex-column flex-md-row justify-content-between align-items-md-center gap-3">
                        <div class="d-flex flex-column flex-md-row gap-3">
                            <!-- Formulario de búsqueda con conservación de filtros -->
                            <form class="d-flex" role="search" method="GET" id="searchForm">
                                <!-- Mantener filtros actuales en búsquedas -->
                                <?php if ($currentPrinted !== ''): ?>
                                <input type="hidden" name="printed" value="<?= $this->escapeHtmlAttr($currentPrinted) ?>">
                                <?php endif; ?>
                                <?php if ($currentStatus !== ''): ?>
                                <input type="hidden" name="status" value="<?= $this->escapeHtmlAttr($currentStatus) ?>">
                                <?php endif; ?>
                                
                                <div class="input-group">
                                    <input type="text" class="form-control" placeholder="Buscar órdenes..." 
                                           name="search" value="<?= isset($search) ? $this->escapeHtml($search) : '' ?>">
                                    <button class="btn btn-primary" type="submit">
                                        <i class="fas fa-search"></i>
                                    </button>
                                </div>
                            </form>
                            
                            <!-- Filtros con mejor integración -->
                            <div class="d-flex gap-2">
                                <!-- Filtro por estado de impresión -->
                                <select class="form-select" name="printed" id="printedFilter">
                                    <option value="">Todos los pedidos</option>
                                    <option value="0" <?= isset($printedFilter) && $printedFilter === '0' ? 'selected' : '' ?>>Sin imprimir</option>
                                    <option value="1" <?= isset($printedFilter) && $printedFilter === '1' ? 'selected' : '' ?>>Impresos</option>
                                </select>
                                

                            </div>
                        </div>
                          
                        <div class="d-flex gap-2">
                            <button type="button" class="btn btn-success" id="refreshListBtn">
                                <i class="fas fa-sync me-1"></i> Actualizar
                            </button>
                            
                            <button type="button" class="btn btn-outline-danger" id="clearFiltersBtn">
                                <i class="fas fa-eraser me-1"></i> Limpiar Filtros
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
                                <!-- BOTÓN DE ACCIONES MASIVAS - MOVIDO AQUÍ -->
                                <div class="dropdown orders-dropdown">
                                    <button class="btn btn-primary dropdown-toggle" type="button" id="bulkActionsBtn" data-bs-toggle="dropdown" aria-expanded="false">
                                        <i class="fas fa-cog me-1"></i> Acciones
                                    </button>
                                    <ul class="dropdown-menu orders-dropdown-menu">
                                        <li><a class="dropdown-item" href="#" id="printLabelsBtn"><i class="fas fa-print me-2"></i>Imprimir etiquetas</a></li>
                                        <li><a class="dropdown-item" href="#" id="generateInvoiceBtn"><i class="fas fa-file-invoice me-2"></i>Imprimir boletas</a></li>
                                        <li><a class="dropdown-item" href="#" id="generatePackingBtn"><i class="fas fa-box me-2"></i>Picking List</a></li>
                                        <li><a class="dropdown-item" href="#" id="generatePickingBtn"><i class="fas fa-clipboard-list me-2"></i>Packing List</a></li>
                                        <li><hr class="dropdown-divider"></li>
                                        <li><a class="dropdown-item mark-as-printed" href="#" id="markAsPrintedBtn"><i class="fas fa-check-circle me-2"></i>Marcar como impreso</a></li>
                                    </ul>
                                </div>
    <!-- Tabla de órdenes mejorada -->
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-body">
                    <?php if (isset($orders) && !empty($orders)): ?>
                    <!-- Mostrar contador de resultados -->
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <span class="text-muted">
                            Mostrando <?= count($orders) ?> de <?= $total ?> resultados
                            <?php if ($search || $statusFilter || $printedFilter): ?>
                                con los filtros aplicados
                            <?php endif; ?>
                        </span>
                    </div>
                    
                    <div class="table-responsive">
                        <table class="table table-hover table-striped">
                            <thead>
                                <tr>
                                    <th width="20">
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" id="selectAllOrders">
                                        </div>
                                    </th>
                                    <th>N° Suborden</th>
                                    <th>Cliente</th>
                                    <th>Dirección</th>
                                    <th>Producto</th>
                                    <th>Total</th>
                                    <th>Estado</th>
                                    <th>Impreso</th>
                                    <th>Fecha</th>
                                    <th>Acciones</th>
                                </tr>
                            </thead>
                            <tbody>
                                <?php foreach ($orders as $order): ?>
                                    <tr data-id="<?= $this->escapeHtml($order['id']) ?>" 
                                        data-estado="<?= strtolower($order['estado'] ?? '') ?>"
                                        data-printed="<?= strtolower($order['printed'] ?? '0') ?>">
                                        <td>
                                            <div class="form-check">
                                                <input class="form-check-input order-checkbox" type="checkbox" 
                                                       value="<?= $this->escapeHtml($order['id']) ?>" 
                                                       data-marketplace="<?= $this->escapeHtml($order['marketplace'] ?? '') ?>"
                                                       data-printed="<?= $this->escapeHtml($order['printed'] ?? '0') ?>">
                                            </div>
                                        </td>
                                        <td class="fw-semibold"><?= $this->escapeHtml($order['suborder_number'] ?? 'N/A') ?></td>
                                        <td>
                                            <div class="fw-semibold"><?= $this->escapeHtml($order['cliente'] ?? 'N/A') ?></div>
                                            <div class="text-muted small">
                                                <i class="fas fa-phone-alt me-1"></i><?= $this->escapeHtml($order['telefono'] ?? '-') ?>
                                            </div>
                                        </td>
                                        <td>
                                            <span title="<?= $this->escapeHtmlAttr($order['direccion'] ?? '-') ?>">
                                                <?= substr($this->escapeHtml($order['direccion'] ?? '-'), 0, 30) ?><?= strlen($order['direccion'] ?? '') > 30 ? '...' : '' ?>
                                            </span>
                                        </td>
                                        <td>
                                            <div class="d-flex align-items-center gap-2">
                                                <span class="flex-grow-1">
                                                    <?php if (isset($order['productos']) && is_array($order['productos'])): ?>
                                                        <?php $productosTexto = implode(', ', array_column($order['productos'], 'nombre')); ?>
                                                        <span title="<?= $this->escapeHtmlAttr($productosTexto) ?>">
                                                            <?= substr($this->escapeHtml($productosTexto), 0, 40) ?><?= strlen($productosTexto) > 40 ? '...' : '' ?>
                                                        </span>
                                                    <?php else: ?>
                                                        <?= $this->escapeHtml($order['productos'] ?? 'N/A') ?>
                                                    <?php endif; ?>
                                                </span>
                                            </div>
                                        </td>
                                        <td><?= isset($order['total']) ? '$' . number_format($order['total'], 0, ',', '.') : 'N/A' ?></td>
                                        <td>
                                            <?php
                                                $estado = strtolower($order['estado'] ?? '');
                                                $estadoClass = match ($estado) {
                                                    'nueva' => 'bg-primary',
                                                    'en proceso' => 'bg-info text-dark',
                                                    'enviada' => 'bg-success',
                                                    'entregada' => 'bg-success',
                                                    'devuelta' => 'bg-danger',
                                                    'pendiente de pago' => 'bg-warning text-dark',
                                                    'cancelada' => 'bg-danger',
                                                    default => 'bg-secondary'
                                                };
                                            ?>
                                            <span class="badge <?= $estadoClass ?>"><?= ucfirst($this->escapeHtml($order['estado'] ?? '-')) ?></span>
                                        </td>
                                        <td>
                                            <?php
                                                $printed = strtolower($order['printed'] ?? '0');
                                                $printedClass = ($printed === '1' || $printed === 'yes') ? 'bg-success' : 'bg-warning';
                                            ?>
                                            <span class="badge <?= $printedClass ?>">
                                                <?= ($printed === '1' || $printed === 'yes') ? 'Sí' : 'No' ?>
                                            </span>
                                        </td>
                                        <td><?= $this->escapeHtml($order['fecha_creacion'] ?? '') ?></td>
                                        <td>
                                            <div class="d-flex gap-1">
                                                <!-- BOTÓN DE NAVEGACIÓN AL DETALLE (OJO) -->
                                                <a href="<?= $this->url('order-detail', ['id' => $order['suborder_number'], 'table' => $table]) ?>" 
                                                    class="btn btn-sm btn-outline-primary" title="Ver detalle">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                                
                                                <!-- Botones condicionales según estado -->
                                                <?php if ($printed === '0' || $printed === 'no'): ?>
                                                <button type="button" class="btn btn-sm btn-outline-secondary print-single-label" 
                                                        data-id="<?= $this->escapeHtml($order['id']) ?>" 
                                                        data-table="<?= $this->escapeHtml($table ?? '') ?>"
                                                        title="Imprimir etiqueta">
                                                    <i class="fas fa-print"></i>
                                                </button>
                                                <?php endif; ?>
                                                
                                                <?php if ($estado === 'nueva' && ($printed === '1' || $printed === 'yes')): ?>
                                                <button type="button" class="btn btn-sm btn-outline-info process-order"
                                                        data-id="<?= $this->escapeHtml($order['id']) ?>"
                                                        data-table="<?= $this->escapeHtml($table ?? '') ?>"
                                                        title="Procesar orden">
                                                    <i class="fas fa-tasks"></i>
                                                </button>
                                                <?php endif; ?>
                                                
                                                <?php if ($estado === 'en proceso'): ?>
                                                <button type="button" class="btn btn-sm btn-outline-success schedule-delivery"
                                                        data-id="<?= $this->escapeHtml($order['id']) ?>"
                                                        data-table="<?= $this->escapeHtml($table ?? '') ?>"
                                                        title="Programar entrega">
                                                    <i class="fas fa-truck"></i>
                                                </button>
                                                <?php endif; ?>
                                            </div>
                                        </td>
                                    </tr>
                                <?php endforeach; ?>
                            </tbody>
                        </table>
                    </div>
                    
                    <!-- Paginación mejorada -->
                    <div class="d-flex justify-content-between align-items-center mt-3">
                        <div class="d-flex align-items-center">
                            <span class="me-2">Mostrar</span>
                            <select id="pageSizeSelect" class="form-select form-select-sm" style="width: auto;">
                                <option value="30" <?= $limit == 30 ? 'selected' : '' ?>>30</option>
                                <option value="50" <?= $limit == 50 ? 'selected' : '' ?>>50</option>
                                <option value="100" <?= $limit == 100 ? 'selected' : '' ?>>100</option>
                                <option value="200" <?= $limit == 200 ? 'selected' : '' ?>>200</option>
                            </select>
                            <span class="ms-2">registros por página</span>
                        </div>
                        
                        <?php if ($totalPages > 1): ?>
                            <nav aria-label="Paginación de órdenes">
                                <ul class="pagination mb-0">
                                    <!-- Primera página -->
                                    <li class="page-item <?= $page <= 1 ? 'disabled' : '' ?>">
                                        <a class="page-link" href="<?= $this->url('application', ['action' => 'orders-detail', 'table' => $table], ['query' => array_merge(['page' => 1, 'limit' => $limit], ['search' => $search, 'status' => $statusFilter, 'printed' => $printedFilter])]) ?>">
                                            <i class="fas fa-angle-double-left"></i>
                                        </a>
                                    </li>
                                    
                                    <!-- Página anterior -->
                                    <li class="page-item <?= $page <= 1 ? 'disabled' : '' ?>">
                                        <a class="page-link" href="<?= $this->url('application', ['action' => 'orders-detail', 'table' => $table], ['query' => array_merge(['page' => max(1, $page - 1), 'limit' => $limit], ['search' => $search, 'status' => $statusFilter, 'printed' => $printedFilter])]) ?>">
                                            <i class="fas fa-angle-left"></i>
                                        </a>
                                    </li>
                                    
                                    <!-- Páginas numéricas -->
                                    <?php
                                        $startPage = max(1, min($page - 1, $totalPages - 3));
                                        $endPage = min($totalPages, max($page + 1, 4));
                                        
                                        for ($i = $startPage; $i <= $endPage; $i++):
                                    ?>
                                        <li class="page-item <?= $i == $page ? 'active' : '' ?>">
                                            <a class="page-link" href="<?= $this->url('application', ['action' => 'orders-detail', 'table' => $table], ['query' => array_merge(['page' => $i, 'limit' => $limit], ['search' => $search, 'status' => $statusFilter, 'printed' => $printedFilter])]) ?>">
                                                <?= $i ?>
                                            </a>
                                        </li>
                                    <?php endfor; ?>
                                    
                                    <!-- Página siguiente -->
                                    <li class="page-item <?= $page >= $totalPages ? 'disabled' : '' ?>">
                                        <a class="page-link" href="<?= $this->url('application', ['action' => 'orders-detail', 'table' => $table], ['query' => array_merge(['page' => min($totalPages, $page + 1), 'limit' => $limit], ['search' => $search, 'status' => $statusFilter, 'printed' => $printedFilter])]) ?>">
                                            <i class="fas fa-angle-right"></i>
                                        </a>
                                    </li>
                                    
                                    <!-- Última página -->
                                    <li class="page-item <?= $page >= $totalPages ? 'disabled' : '' ?>">
                                        <a class="page-link" href="<?= $this->url('application', ['action' => 'orders-detail', 'table' => $table], ['query' => array_merge(['page' => $totalPages, 'limit' => $limit], ['search' => $search, 'status' => $statusFilter, 'printed' => $printedFilter])]) ?>">
                                            <i class="fas fa-angle-double-right"></i>
                                        </a>
                                    </li>
                                </ul>
                            </nav>
                        <?php endif; ?>
                    </div>
                    
                    <?php else: ?>
                        <!-- Estado vacío mejorado -->
                        <div class="text-center py-5">
                            <div class="mb-4">
                                <i class="fas fa-search fa-3x text-muted"></i>
                            </div>
                            <h4 class="text-muted mb-3">No se encontraron órdenes</h4>
                            <p class="text-muted mb-4">
                                <?php if ($search || $statusFilter || $printedFilter): ?>
                                    No hay resultados que coincidan con los filtros aplicados.
                                <?php else: ?>
                                    No hay órdenes disponibles en este marketplace.
                                <?php endif; ?>
                            </p>
                            <?php if ($search || $statusFilter || $printedFilter): ?>
                                <a href="<?= $this->url('application', ['action' => 'orders-detail', 'table' => $table]) ?>" class="btn btn-outline-primary">
                                    <i class="fas fa-eraser me-2"></i> Limpiar filtros
                                </a>
                            <?php endif; ?>
                        </div>
                    <?php endif; ?>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal para programar entrega -->
<div class="modal fade" id="scheduleDeliveryModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Programar Entrega</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label class="form-label">Transportista</label>
                    <input type="text" class="form-control" id="deliveryTransportista" placeholder="Nombre del transportista">
                </div>
                <div class="mb-3">
                    <label class="form-label">Número de seguimiento</label>
                    <input type="text" class="form-control" id="deliveryTracking">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" id="confirmDelivery">Confirmar</button>
            </div>
        </div>
    </div>
</div>

<!-- JavaScript para la funcionalidad -->
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Solución para arreglar el problema con el botón de órdenes
    // Dejamos que Bootstrap maneje el dropdown normalmente
    
    // Referencia a elementos DOM importantes
    const statusFilter = document.getElementById('statusFilter');
    const printedFilter = document.getElementById('printedFilter');
    const pageSizeSelect = document.getElementById('pageSizeSelect');
    const refreshListBtn = document.getElementById('refreshListBtn');
    const clearFiltersBtn = document.getElementById('clearFiltersBtn');
    const selectAllOrders = document.getElementById('selectAllOrders');
    const orderCheckboxes = document.querySelectorAll('.order-checkbox');
    const bulkActionsBtn = document.getElementById('bulkActionsBtn');
    
    // Manejar cambios en filtros (estado y printed)
    if (printedFilter) {
        printedFilter.addEventListener('change', function() {
            updateFilterUrl();
        });
    }
    
    // Manejar cambios en tamaño de página
    if (pageSizeSelect) {
        pageSizeSelect.addEventListener('change', function() {
            updateFilterUrl(true);
        });
    }
    
    // Manejar clic en botón de refrescar
    if (refreshListBtn) {
        refreshListBtn.addEventListener('click', function() {
            window.location.reload();
        });
    }
    
    // Manejar clic en botón de limpiar filtros
    if (clearFiltersBtn) {
        clearFiltersBtn.addEventListener('click', function() {
            window.location.href = '<?= $this->url('application', ['action' => 'orders-detail', 'table' => $table]) ?>';
        });
    }
    
    // Seleccionar todos los pedidos
    if (selectAllOrders) {
        selectAllOrders.addEventListener('change', function() {
            orderCheckboxes.forEach(checkbox => {
                checkbox.checked = this.checked;
            });
            updateBulkActionsButton();
        });
    }
    
    // Actualizar estado de botón de acciones masivas al seleccionar/deseleccionar pedidos
    orderCheckboxes.forEach(checkbox => {
        checkbox.addEventListener('change', function() {
            updateBulkActionsButton();
            
            // Verificar si todos están seleccionados
            if (!this.checked && selectAllOrders && selectAllOrders.checked) {
                selectAllOrders.checked = false;
            } else if (selectAllOrders) {
                const allChecked = Array.from(orderCheckboxes).every(cb => cb.checked);
                selectAllOrders.checked = allChecked;
            }
        });
    });
    
    // Actualizar botón de acciones masivas
    function updateBulkActionsButton() {
        if (!bulkActionsBtn) return;
        
        const selectedCount = document.querySelectorAll('.order-checkbox:checked').length;
        if (selectedCount > 0) {
            bulkActionsBtn.classList.remove('disabled');
            bulkActionsBtn.innerHTML = `<i class="fas fa-cog me-1"></i> Acciones (${selectedCount})`;
        } else {
            bulkActionsBtn.classList.add('disabled');
            bulkActionsBtn.innerHTML = `<i class="fas fa-cog me-1"></i> Acciones`;
        }
    }
    
    // Inicializar estado del botón
    updateBulkActionsButton();
    
    // Función para actualizar URL con los filtros
    function updateFilterUrl(resetPage = false) {
        const currentUrl = new URL(window.location.href);
        
        // Actualizar filtros
        const status = statusFilter ? statusFilter.value : '';
        const printed = printedFilter ? printedFilter.value : '';
        const limit = pageSizeSelect ? pageSizeSelect.value : '30';
        
        // Aplicar filtros a URL
        if (status) {
            currentUrl.searchParams.set('status', status);
        } else {
            currentUrl.searchParams.delete('status');
        }
        
        if (printed !== '') {
            currentUrl.searchParams.set('printed', printed);
        } else {
            currentUrl.searchParams.delete('printed');
        }
        
        currentUrl.searchParams.set('limit', limit);
        
        // Reset a primera página si cambian los filtros
        if (resetPage) {
            currentUrl.searchParams.set('page', '1');
        }
        
        // Navegar a la nueva URL
        window.location.href = currentUrl.toString();
    }
    
    // Manejar botones de imprimir etiqueta individual
    document.addEventListener('click', function(e) {
        if (e.target.closest('.print-single-label')) {
            const btn = e.target.closest('.print-single-label');
            const orderId = btn.dataset.id;
            const table = btn.dataset.table;
            
            printSingleLabel(orderId, table);
        }
    });
    
    // Manejar botones de procesar orden
    document.addEventListener('click', function(e) {
        if (e.target.closest('.process-order')) {
            const btn = e.target.closest('.process-order');
            const orderId = btn.dataset.id;
            const table = btn.dataset.table;
            
            processOrder(orderId, table);
        }
    });
    
    // Manejar botones de programar entrega
    document.addEventListener('click', function(e) {
        if (e.target.closest('.schedule-delivery')) {
            const btn = e.target.closest('.schedule-delivery');
            const orderId = btn.dataset.id;
            const table = btn.dataset.table;
            
            // Guardar para uso en el modal
            document.getElementById('scheduleDeliveryModal').dataset.orderId = orderId;
            document.getElementById('scheduleDeliveryModal').dataset.table = table;
            
            // Mostrar modal
            const modal = new bootstrap.Modal(document.getElementById('scheduleDeliveryModal'));
            modal.show();
        }
    });
    
    // Confirmar entrega
    const confirmDeliveryBtn = document.getElementById('confirmDelivery');
    if (confirmDeliveryBtn) {
        confirmDeliveryBtn.addEventListener('click', function() {
            const modal = document.getElementById('scheduleDeliveryModal');
            const orderId = modal.dataset.orderId;
            const table = modal.dataset.table;
            const transportista = document.getElementById('deliveryTransportista').value;
            const tracking = document.getElementById('deliveryTracking').value;
            
            if (!transportista) {
                showToast('Por favor ingresa un transportista', 'warning');
                return;
            }
            
            scheduleOrderDelivery(orderId, table, transportista, tracking);
        });
    }
    
    // Botones de acciones masivas
    document.getElementById('printLabelsBtn')?.addEventListener('click', function(e) {
        e.preventDefault();
        const selectedOrders = getSelectedOrders();
        if (selectedOrders.length === 0) {
            showToast('Por favor, selecciona al menos una orden', 'warning');
            return;
        }
        submitBulkAction(selectedOrders, 'print-labels');
    });
    
    document.getElementById('generateInvoiceBtn')?.addEventListener('click', function(e) {
        e.preventDefault();
        const selectedOrders = getSelectedOrders();
        if (selectedOrders.length === 0) {
            showToast('Por favor, selecciona al menos una orden', 'warning');
            return;
        }
        submitBulkAction(selectedOrders, 'print-invoice');
    });
    
    document.getElementById('generatePackingBtn')?.addEventListener('click', function(e) {
        e.preventDefault();
        const selectedOrders = getSelectedOrders();
        if (selectedOrders.length === 0) {
            showToast('Por favor, selecciona al menos una orden', 'warning');
            return;
        }
        submitBulkAction(selectedOrders, 'generate-packing');
    });
    
    document.getElementById('generatePickingBtn')?.addEventListener('click', function(e) {
        e.preventDefault();
        const selectedOrders = getSelectedOrders();
        if (selectedOrders.length === 0) {
            showToast('Por favor, selecciona al menos una orden', 'warning');
            return;
        }
        submitBulkAction(selectedOrders, 'generate-picking');
    });
    
    document.getElementById('markAsPrintedBtn')?.addEventListener('click', function(e) {
        e.preventDefault();
        const selectedOrders = getSelectedOrders();
        if (selectedOrders.length === 0) {
            showToast('Por favor, selecciona al menos una orden', 'warning');
            return;
        }
        
        if (confirm(`¿Confirmas que deseas marcar ${selectedOrders.length} órdenes como impresas?`)) {
            selectedOrders.forEach(order => {
                // Asegurarse de enviar la tabla correctamente
                const table = order.marketplace ? 'Orders_' + order.marketplace : '<?= $table ?>';
                markOrderAsPrinted(order.id, table);
            });
        }
    });
    
    // Funciones de soporte
    function getSelectedOrders() {
        const selected = [];
        document.querySelectorAll('.order-checkbox:checked').forEach(checkbox => {
            let table = checkbox.dataset.marketplace;
            if (table && !table.startsWith('Orders_')) {
                table = 'Orders_' + table;
            } else if (!table) {
                table = '<?= $table ?>';
            }
            
            selected.push({
                id: checkbox.value,
                marketplace: checkbox.dataset.marketplace,
                table: table
            });
        });
        return selected;
    }
    
    function submitBulkAction(selectedOrders, action) {
        const form = document.createElement('form');
        form.method = 'POST';
        form.action = '<?= $this->url('application', ['action' => 'bulk-orders']) ?>';
        
        if (['print-labels', 'generate-manifest', 'generate-packing', 'generate-picking', 'print-invoice'].includes(action)) {
            form.target = '_blank';
        }
        
        selectedOrders.forEach(order => {
            const input = document.createElement('input');
            input.type = 'hidden';
            input.name = 'orderIds[]';
            input.value = order.id;
            form.appendChild(input);
        });
        
        const tableInput = document.createElement('input');
        tableInput.type = 'hidden';
        tableInput.name = 'table';
        tableInput.value = '<?= $this->escapeJs($table ?? '') ?>';
        form.appendChild(tableInput);
        
        const actionInput = document.createElement('input');
        actionInput.type = 'hidden';
        actionInput.name = 'action';
        actionInput.value = action;
        form.appendChild(actionInput);
        
        document.body.appendChild(form);
        form.submit();
        document.body.removeChild(form);
    }
    
    function printSingleLabel(orderId, table) {
        const form = document.createElement('form');
        form.method = 'POST';
        form.action = '<?= $this->url('application', ['action' => 'bulk-orders']) ?>';
        form.target = '_blank';
        
        const orderIdInput = document.createElement('input');
        orderIdInput.type = 'hidden';
        orderIdInput.name = 'orderIds[]';
        orderIdInput.value = orderId;
        form.appendChild(orderIdInput);
        
        const tableInput = document.createElement('input');
        tableInput.type = 'hidden';
        tableInput.name = 'table';
        tableInput.value = table;
        form.appendChild(tableInput);
        
        const actionInput = document.createElement('input');
        actionInput.type = 'hidden';
        actionInput.name = 'action';
        actionInput.value = 'print-labels';
        form.appendChild(actionInput);
        
        document.body.appendChild(form);
        form.submit();
        document.body.removeChild(form);
        
        updateOrderPrintedStatus(orderId, true);
        
        showToast(`Etiqueta generada. Orden ${orderId} marcada como impresa.`, 'success');
        
        setTimeout(() => window.location.reload(), 2000);
    }
    
    function processOrder(orderId, table) {
        if (!confirm('¿Confirmas que deseas procesar esta orden? Se cambiará a estado "En Proceso".')) {
            return;
        }
        
        fetch('<?= $this->url('application', ['action' => 'update-order-status']) ?>', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                orderId: orderId,
                table: table,
                newStatus: 'En Proceso'
            })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                showToast('Orden cambiada a "En Proceso"', 'success');
                setTimeout(() => window.location.reload(), 1500);
            } else {
                showToast('Error al actualizar orden', 'error');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            showToast('Error de comunicación', 'error');
        });
    }
    
    function scheduleOrderDelivery(orderId, table, transportista, tracking) {
        fetch('<?= $this->url('application', ['action' => 'update-order-carrier']) ?>', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                orderId: orderId,
                table: table,
                newCarrier: transportista,
                trackingNumber: tracking,
                updateStatus: true
            })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                showToast('Entrega programada. Orden cambiada a "Enviada"', 'success');
                
                // Cerrar modal
                const modal = bootstrap.Modal.getInstance(document.getElementById('scheduleDeliveryModal'));
                if (modal) modal.hide();
                
                setTimeout(() => window.location.reload(), 1500);
            } else {
                showToast('Error al programar entrega', 'error');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            showToast('Error de comunicación', 'error');
        });
    }
    
    function markOrderAsPrinted(orderId, table) {
        if (!table.startsWith('Orders_')) {
            table = 'Orders_' + table;
        }
        
        fetch('<?= $this->url('application', ['action' => 'mark-as-printed']) ?>', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                orderId: orderId,
                table: table
            })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                showToast('Orden marcada como impresa', 'success');
                updateOrderPrintedStatus(orderId, true);
                setTimeout(() => window.location.reload(), 2000);
            } else {
                showToast('Error al marcar orden: ' + (data.message || 'Error desconocido'), 'error');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            showToast('Error de comunicación', 'error');
        });
    }
    
    function updateOrderPrintedStatus(orderId, printed) {
        const row = document.querySelector(`tr[data-id="${orderId}"]`);
        if (row) {
            const printedCell = row.querySelector('td:nth-child(8) .badge');
            if (printedCell) {
                printedCell.className = `badge ${printed ? 'bg-success' : 'bg-warning'}`;
                printedCell.textContent = printed ? 'Sí' : 'No';
            }
            
            // Actualizar atributo para futuros filtros
            row.dataset.printed = printed ? '1' : '0';
            
            // Actualizar checkbox
            const checkbox = row.querySelector('.order-checkbox');
            if (checkbox) {
                checkbox.dataset.printed = printed ? '1' : '0';
            }
            
            // Actualizar botones de acción según el nuevo estado
            updateActionButtons(row);
        }
    }
    
    function updateActionButtons(row) {
        const estado = row.dataset.estado;
        const printed = row.dataset.printed === '1' || row.dataset.printed === 'yes';
        const actionsCell = row.querySelector('td:last-child .d-flex');
        
        // Conservar botón de detalle (ojo)
        const detailButton = actionsCell.querySelector('a.btn-outline-primary');
        
        // Limpiar otros botones
        Array.from(actionsCell.children).forEach(button => {
            if (button !== detailButton) {
                actionsCell.removeChild(button);
            }
        });
        
        // Añadir botones según estado
        if (!printed) {
            // Botón de imprimir
            const printBtn = document.createElement('button');
            printBtn.className = 'btn btn-sm btn-outline-secondary print-single-label ms-1';
            printBtn.dataset.id = row.dataset.id;
            printBtn.dataset.table = '<?= $this->escapeJs($table ?? '') ?>';
            printBtn.title = 'Imprimir etiqueta';
            printBtn.innerHTML = '<i class="fas fa-print"></i>';
            actionsCell.appendChild(printBtn);
        } else if (estado === 'nueva') {
            // Botón de procesar
            const processBtn = document.createElement('button');
            processBtn.className = 'btn btn-sm btn-outline-info process-order ms-1';
            processBtn.dataset.id = row.dataset.id;
            processBtn.dataset.table = '<?= $this->escapeJs($table ?? '') ?>';
            processBtn.title = 'Procesar orden';
            processBtn.innerHTML = '<i class="fas fa-tasks"></i>';
            actionsCell.appendChild(processBtn);
        } else if (estado === 'en proceso') {
            // Botón de programar entrega
            const deliveryBtn = document.createElement('button');
            deliveryBtn.className = 'btn btn-sm btn-outline-success schedule-delivery ms-1';
            deliveryBtn.dataset.id = row.dataset.id;
            deliveryBtn.dataset.table = '<?= $this->escapeJs($table ?? '') ?>';
            deliveryBtn.title = 'Programar entrega';
            deliveryBtn.innerHTML = '<i class="fas fa-truck"></i>';
            actionsCell.appendChild(deliveryBtn);
        }
    }
    
    function showToast(message, type = 'info') {
        let toastContainer = document.querySelector('.toast-container');
        if (!toastContainer) {
            toastContainer = document.createElement('div');
            toastContainer.className = 'toast-container position-fixed bottom-0 end-0 p-3';
            toastContainer.style.zIndex = '9999';
            document.body.appendChild(toastContainer);
        }
        
        const toastEl = document.createElement('div');
        toastEl.className = `toast align-items-center text-white bg-${type === 'error' ? 'danger' : type}`;
        toastEl.setAttribute('role', 'alert');
        toastEl.setAttribute('aria-live', 'assertive');
        toastEl.setAttribute('aria-atomic', 'true');
        
        toastEl.innerHTML = `
            <div class="d-flex">
                <div class="toast-body">
                    ${message}
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
        `;
        
        toastContainer.appendChild(toastEl);
        
        const toast = new bootstrap.Toast(toastEl, {
            autohide: true,
            delay: 5000
        });
        toast.show();
        
        toastEl.addEventListener('hidden.bs.toast', function () {
            toastEl.remove();
        });
    }
});
</script>

<!-- CSS adicional -->
<style>
.btn-sm {
    padding: 0.25rem 0.5rem;
    font-size: 0.875rem;
    line-height: 1.5;
    border-radius: 0.2rem;
}

.table th {
    font-weight: 600;
    background-color: #f8f9fa;
}

.badge {
    font-weight: 500;
    padding: 0.35em 0.65em;
}

.toast-container {
    z-index: 9999 !important;
}

/* Estilos por estado */
tr[data-estado="nueva"][data-printed="0"] {
    background-color: rgba(255, 243, 205, 0.3);
}

tr[data-estado="nueva"][data-printed="1"] {
    background-color: rgba(207, 244, 252, 0.3);
}

tr[data-estado="en proceso"] {
    background-color: rgba(209, 231, 221, 0.3);
}

/* SOLUCIÓN PARA EL DROPDOWN DE ÓRDENES */
/* Usamos clases específicas para este dropdown */
.order-filters-card {
    position: relative;
    z-index: 100 !important;
    overflow: visible !important;
}

.orders-dropdown {
    position: relative !important;
    z-index: 10000 !important;
}

.orders-dropdown .dropdown-toggle {
    position: relative !important;
    z-index: 10000 !important;
}

.orders-dropdown-menu {
    position: absolute !important;
    z-index: 10001 !important;
}

/* Aseguramos que las tablas no interfieran */
.table-responsive,
.table,
.card,
.card-body {
    position: relative !important;
    z-index: 1 !important;
    overflow: visible !important;
}

/* Mejoras visuales adicionales */
.page-link {
    color: #4361ee;
}

.page-item.active .page-link {
    background-color: #4361ee;
    border-color: #4361ee;
}

.form-select:focus, .form-control:focus {
    border-color: #4361ee;
    box-shadow: 0 0 0 0.25rem rgba(67, 97, 238, 0.25);
}

/* Fix adicional para la visibilidad del dropdown */
.dropdown-menu.show {
    display: block !important;
}
</style>