<?php
/**
 * @var Laminas\View\Renderer\PhpRenderer $this
 */
$this->headTitle('Órdenes');

// Agregar CSS y JS
$this->headLink()
    ->prependStylesheet($this->basePath('css/custom-orders.css'))
    ->prependStylesheet('https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css')
    ->prependStylesheet('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css');

$this->headScript()
    ->appendFile('https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js')
    ->appendFile($this->basePath('js/orders-manager.js'));

// Configuración de marketplaces
$marketplaceDetails = [
    'WALLMART' => ['name' => 'Walmart', 'color' => '#0071ce', 'icon' => 'fa-shopping-cart'],
    'RIPLEY' => ['name' => 'Ripley', 'color' => '#e60000', 'icon' => 'fa-store'],
    'FALABELLA' => ['name' => 'Falabella', 'color' => '#0a4a90', 'icon' => 'fa-shopping-bag'],
    'MERCADO_LIBRE' => ['name' => 'Mercado Libre', 'color' => '#ffe600', 'icon' => 'fa-handshake'],
    'PARIS' => ['name' => 'Paris', 'color' => '#e71785', 'icon' => 'fa-gift'],
    'WOOCOMMERCE' => ['name' => 'WooCommerce', 'color' => '#7f54b3', 'icon' => 'fa-shopping-basket']
];

// Obtener marketplace actual
$marketplace = isset($table) && $table !== 'all' ? str_replace('Orders_', '', $table) : 'TODOS';
$marketplace = strtoupper($marketplace);

// Configurar nombre y color del marketplace
$displayName = $marketplaceDetails[$marketplace]['name'] ?? 'Todos los Marketplaces';
$marketColor = $marketplaceDetails[$marketplace]['color'] ?? '#4361ee';
$marketIcon = $marketplaceDetails[$marketplace]['icon'] ?? 'fa-shopping-cart';

// Valores predeterminados para estadísticas
$stats = $stats ?? [
    'total' => 0,
    'nuevas' => 0,
    'en_proceso' => 0,
    'enviadas' => 0,
    'entregadas' => 0
];

// Configuración de paginación
$page = $page ?? 1;
$limit = $limit ?? 25;
$totalPages = $totalPages ?? 1;
$total = $total ?? 0;
?>

<div class="container-fluid py-3">
    <!-- Cabecera de la página -->
    <div class="row mb-3">
        <div class="col-md-6">
            <h1 class="h3 mb-0 d-flex align-items-center">
                <i class="fas <?= $marketIcon ?> me-2" style="color: <?= $marketColor ?>;"></i>
                Órdenes: <?= $this->escapeHtml($displayName) ?>
            </h1>
            <p class="text-muted mt-1 mb-0">Gestión y seguimiento de pedidos</p>
        </div>
        <div class="col-md-6 text-end">
            <div class="btn-group">
                <button type="button" class="btn btn-outline-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                    <i class="fas fa-store me-1"></i> Marketplace
                </button>
                <ul class="dropdown-menu dropdown-menu-end">
                    <li><a class="dropdown-item <?= $marketplace === 'TODOS' ? 'active' : '' ?>" href="?table=all">Todos los Marketplaces</a></li>
                    <li><hr class="dropdown-divider"></li>
                    <?php foreach ($marketplaceDetails as $key => $details): ?>
                    <li>
                        <a class="dropdown-item <?= $marketplace === $key ? 'active' : '' ?>" href="?table=Orders_<?= $key ?>">
                            <i class="fas <?= $details['icon'] ?> me-2" style="color: <?= $details['color'] ?>;"></i>
                            <?= $details['name'] ?>
                        </a>
                    </li>
                    <?php endforeach; ?>
                </ul>
            </div>
            <button type="button" class="btn btn-outline-primary ms-1" id="syncOrdersBtn">
                <i class="fas fa-sync-alt me-1"></i> Sincronizar
            </button>
            <button type="button" class="btn btn-outline-info ms-1" data-bs-toggle="modal" data-bs-target="#helpModal">
                <i class="fas fa-question-circle"></i>
            </button>
        </div>
    </div>

    <!-- Tarjetas de estadísticas -->
    <div class="row mb-3">
        <div class="col-md-3 mb-3 mb-md-0">
            <div class="card h-100">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-shrink-0 me-3 p-3 rounded-3" style="background-color: rgba(<?= hexToRgb($marketColor) ?>, 0.1);">
                            <i class="fas fa-shopping-cart fa-2x" style="color: <?= $marketColor ?>;"></i>
                        </div>
                        <div>
                            <h5 class="fw-bold mb-0"><?= number_format($stats['total']) ?></h5>
                            <div class="text-muted">Total de órdenes</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3 mb-md-0">
            <div class="card h-100">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-shrink-0 me-3 p-3 rounded-3" style="background-color: rgba(23, 162, 184, 0.1);">
                            <i class="fas fa-plus-circle fa-2x text-info"></i>
                        </div>
                        <div>
                            <h5 class="fw-bold mb-0"><?= number_format($stats['nuevas']) ?></h5>
                            <div class="text-muted">Nuevas</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3 mb-md-0">
            <div class="card h-100">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-shrink-0 me-3 p-3 rounded-3" style="background-color: rgba(255, 193, 7, 0.1);">
                            <i class="fas fa-clock fa-2x text-warning"></i>
                        </div>
                        <div>
                            <h5 class="fw-bold mb-0"><?= number_format($stats['en_proceso']) ?></h5>
                            <div class="text-muted">En proceso</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card h-100">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <div class="flex-shrink-0 me-3 p-3 rounded-3" style="background-color: rgba(40, 167, 69, 0.1);">
                            <i class="fas fa-truck-moving fa-2x text-success"></i>
                        </div>
                        <div>
                            <h5 class="fw-bold mb-0"><?= number_format($stats['enviadas']) ?></h5>
                            <div class="text-muted">Enviadas</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Filtros y botones de acción -->
    <div class="card mb-3">
        <div class="card-body p-3">
            <div class="row g-2">
                <div class="col-md-3">
                    <form class="d-flex" role="search" method="GET" id="searchForm">
                        <div class="input-group">
                            <input type="text" class="form-control" placeholder="Buscar órdenes..." name="search" value="<?= isset($search) ? $this->escapeHtml($search) : '' ?>">
                            <button class="btn btn-primary" type="submit">
                                <i class="fas fa-search"></i>
                            </button>
                        </div>
                        <?php if (isset($startDate) && !empty($startDate)): ?>
                            <input type="hidden" name="startDate" value="<?= $this->escapeHtml($startDate) ?>">
                        <?php endif; ?>
                        <?php if (isset($endDate) && !empty($endDate)): ?>
                            <input type="hidden" name="endDate" value="<?= $this->escapeHtml($endDate) ?>">
                        <?php endif; ?>
                        <?php if (isset($statusFilter) && !empty($statusFilter)): ?>
                            <input type="hidden" name="status" value="<?= $this->escapeHtml($statusFilter) ?>">
                        <?php endif; ?>
                        <?php if (isset($table) && !empty($table)): ?>
                            <input type="hidden" name="table" value="<?= $this->escapeHtml($table) ?>">
                        <?php endif; ?>
                    </form>
                </div>
                <div class="col-md-5">
                    <div class="d-flex flex-wrap gap-2">
                        <select class="form-select" id="statusFilter" style="max-width: 150px;">
                            <option value="">Todos los estados</option>
                            <option value="Nueva" <?= isset($statusFilter) && $statusFilter === 'Nueva' ? 'selected' : '' ?>>Nueva</option>
                            <option value="En Proceso" <?= isset($statusFilter) && $statusFilter === 'En Proceso' ? 'selected' : '' ?>>En Proceso</option>
                            <option value="Enviada" <?= isset($statusFilter) && $statusFilter === 'Enviada' ? 'selected' : '' ?>>Enviada</option>
                            <option value="Entregada" <?= isset($statusFilter) && $statusFilter === 'Entregada' ? 'selected' : '' ?>>Entregada</option>
                        </select>
                        <div class="input-group" style="max-width: 320px;">
                            <span class="input-group-text"><i class="fas fa-calendar"></i></span>
                            <input type="date" class="form-control" id="startDate" placeholder="Fecha inicial" value="<?= isset($startDate) ? $this->escapeHtml($startDate) : '' ?>">
                            <input type="date" class="form-control" id="endDate" placeholder="Fecha final" value="<?= isset($endDate) ? $this->escapeHtml($endDate) : '' ?>">
                            <button class="btn btn-outline-secondary" type="button" id="applyDateFilter">
                                <i class="fas fa-check"></i>
                            </button>
                        </div>
                    </div>
                </div>
                <div class="col-md-4 text-end">
                    <div class="d-flex justify-content-end gap-2">
                        <div class="btn-group">
                            <button type="button" class="btn btn-primary dropdown-toggle" id="bulkActionsBtn" data-bs-toggle="dropdown" aria-expanded="false" disabled>
                                <i class="fas fa-cog me-1"></i> Acciones <span class="badge bg-light text-dark" id="selectedCount">0</span>
                            </button>
                            <ul class="dropdown-menu dropdown-menu-end">
                                <li><h6 class="dropdown-header">Documentos</h6></li>
                                <li><a class="dropdown-item" href="#" id="printLabelsBtn"><i class="fas fa-print me-2"></i>Imprimir etiquetas</a></li>
                                <li><a class="dropdown-item" href="#" id="generateInvoiceBtn"><i class="fas fa-file-invoice me-2"></i>Imprimir boletas</a></li>
                                <li><a class="dropdown-item" href="#" id="generateManifestBtn"><i class="fas fa-file-alt me-2"></i>Generar manifiesto</a></li>
                                <li><a class="dropdown-item" href="#" id="generatePackingBtn"><i class="fas fa-box me-2"></i>Lista de empaque</a></li>
                                <li><a class="dropdown-item" href="#" id="generatePickingBtn"><i class="fas fa-clipboard-list me-2"></i>Lista de picking</a></li>
                                <li><hr class="dropdown-divider"></li>
                                <li><h6 class="dropdown-header">Exportar</h6></li>
                                <li><a class="dropdown-item" href="#" id="exportCsvBtn"><i class="fas fa-file-csv me-2"></i>Exportar a CSV</a></li>
                                <li><a class="dropdown-item" href="#" id="exportExcelBtn"><i class="fas fa-file-excel me-2"></i>Exportar a Excel</a></li>
                            </ul>
                        </div>
                        <button type="button" class="btn btn-outline-secondary" id="clearFiltersBtn">
                            <i class="fas fa-filter-circle-xmark"></i>
                        </button>
                        <button type="button" class="btn btn-outline-success" id="refreshListBtn">
                            <i class="fas fa-sync"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Tabla de órdenes -->
    <div class="card">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0" id="ordersTable">
                    <thead class="table-light">
                        <tr>
                            <th width="40" class="border-bottom">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="selectAllOrders">
                                </div>
                            </th>
                            <th width="80" class="border-bottom">Suborden</th>
                            <?php if ($marketplace === 'TODOS'): ?>
                            <th width="120" class="border-bottom">Marketplace</th>
                            <?php endif; ?>
                            <th width="130" class="border-bottom">Fecha Creación</th>
                            <th width="130" class="border-bottom">Fecha Entrega</th>
                            <th width="130" class="border-bottom">Opción de Entrega</th>
                            <th width="130" class="border-bottom">Estado Impreso</th>
                            <th class="border-bottom">Cliente</th>
                            <th width="140" class="border-bottom">Boleta</th>
                            <th width="110" class="border-bottom">Productos</th>
                            <th width="100" class="border-bottom text-end">Total</th>
                            <th width="100" class="border-bottom">Estado</th>
                            <th width="130" class="border-bottom">Transportista</th>
                            <th width="100" class="border-bottom text-center">Acciones</th>
                        </tr>
                    </thead>

                    <tbody>
                        <?php if (isset($orders) && !empty($orders)): ?>
                            <?php 
                            // Agrupar órdenes por boleta/factura
                            $groupedOrders = [];
                            foreach ($orders as $order) {
                                $boletaId = $order['boleta_id'] ?? $order['id'];
                                if (!isset($groupedOrders[$boletaId])) {
                                    $groupedOrders[$boletaId] = [
                                        'orders' => [],
                                        'total' => 0,
                                        'cliente' => $order['cliente'] ?? 'N/A',
                                        'fecha' => $order['fecha_creacion'] ?? 'N/A',
                                        'estado' => $order['estado'] ?? 'N/A',
                                        'transportista' => $order['transportista'] ?? 'N/A',
                                        'num_seguimiento' => $order['num_seguimiento'] ?? '',
                                        'marketplace' => $order['marketplace'] ?? $marketplace
                                    ];
                                }
                                $groupedOrders[$boletaId]['orders'][] = $order;
                                $groupedOrders[$boletaId]['total'] += (float)($order['total'] ?? 0);
                            }
                            
                            foreach ($groupedOrders as $boletaId => $group):
                                $firstOrder = $group['orders'][0];
                                $rowspan = count($group['orders']);
                                $first = true;
                                
                                foreach ($group['orders'] as $order):
                            ?>
                                <tr data-id="<?= $this->escapeHtml($order['id']) ?>" class="<?= $first ? 'boleta-group-start' : 'boleta-group-item' ?>">
                                    <td>
                                        <div class="form-check">
                                            <input class="form-check-input order-checkbox" type="checkbox" value="<?= $this->escapeHtml($order['id']) ?>" data-marketplace="<?= $this->escapeHtml($order['marketplace'] ?? $marketplace) ?>">
                                        </div>
                                    </td>
                                    <td class="fw-semibold">#<?= $this->escapeHtml($order['id']) ?></td>
                                    <?php if ($marketplace === 'TODOS'): ?>
                                    <?php if ($first): ?>
                                    <td <?= $rowspan > 1 ? 'rowspan="'.$rowspan.'"' : '' ?>>
                                        <?php
                                            $mkp = $group['marketplace'];
                                            $mkpDetails = $marketplaceDetails[$mkp] ?? ['name' => $mkp, 'color' => '#6c757d', 'icon' => 'fa-store'];
                                        ?>
                                        <span class="badge" style="background-color: <?= $mkpDetails['color'] ?>">
                                            <i class="fas <?= $mkpDetails['icon'] ?> me-1"></i>
                                            <?= $mkpDetails['name'] ?>
                                        </span>
                                    </td>
                                    <?php endif; ?>
                                    <?php endif; ?>
                                    
                                    <?php if ($first): ?>
                                    <td <?= $rowspan > 1 ? 'rowspan="'.$rowspan.'"' : '' ?>>
                                        <?= $this->escapeHtml($group['fecha']) ?>
                                    </td>
                                    <td <?= $rowspan > 1 ? 'rowspan="'.$rowspan.'"' : '' ?>>
                                        <div class="d-flex align-items-center">
                                            <div class="me-2 rounded-circle text-white d-flex align-items-center justify-content-center" style="width: 32px; height: 32px; background-color: <?= $marketColor ?>;">
                                                <?= strtoupper(substr($group['cliente'], 0, 1)) ?>
                                            </div>
                                            <div>
                                                <?= $this->escapeHtml($group['cliente']) ?>
                                                <?php if (!empty($order['telefono'])): ?>
                                                    <div class="small text-muted"><?= $this->escapeHtml($order['telefono']) ?></div>
                                                <?php endif; ?>
                                            </div>
                                        </div>
                                    </td>
                                    <td <?= $rowspan > 1 ? 'rowspan="'.$rowspan.'"' : '' ?>>
                                        <?php if (!empty($boletaId)): ?>
                                            <span class="badge bg-dark">
                                                <i class="fas fa-receipt me-1"></i>
                                                #<?= $this->escapeHtml($boletaId) ?>
                                            </span>
                                            <?php if (!empty($order['boleta_url'])): ?>
                                                <a href="<?= $this->escapeHtml($order['boleta_url']) ?>" target="_blank" class="btn btn-sm btn-link p-0 ms-1">
                                                    <i class="fas fa-external-link-alt"></i>
                                                </a>
                                            <?php endif; ?>
                                        <?php else: ?>
                                            <span class="badge bg-secondary">Sin boleta</span>
                                        <?php endif; ?>
                                    </td>
                                    <?php endif; ?>
                                    
                                    <td>
                                        <?php
                                            $productos = $order['productos'] ?? '';
                                            $productosList = is_string($productos) ? explode(',', $productos) : [];
                                            if (count($productosList) > 0) {
                                                echo '<span class="badge bg-info">' . count($productosList) . ' item(s)</span>';
                                                echo '<button type="button" class="btn btn-sm btn-link p-0 ms-1 view-products-btn" data-id="' . $this->escapeHtml($order['id']) . '">Ver</button>';
                                            } else {
                                                echo '<span class="badge bg-light text-dark">Sin productos</span>';
                                            }
                                        ?>
                                    </td>
                                    
                                    <?php if ($first): ?>
                                    <td class="text-end fw-semibold <?= $rowspan > 1 ? 'border-end' : '' ?>" <?= $rowspan > 1 ? 'rowspan="'.$rowspan.'"' : '' ?>>
                                        $<?= number_format($group['total'], 0, ',', '.') ?>
                                    </td>
                                    <td <?= $rowspan > 1 ? 'rowspan="'.$rowspan.'"' : '' ?>>
                                        <?php
                                            $estado = $group['estado'];
                                            $estadoClass = 'bg-secondary';
                                            $estadoIcon = 'fa-question-circle';
                                            
                                            switch ($estado) {
                                                case 'Nueva': 
                                                    $estadoClass = 'bg-info'; 
                                                    $estadoIcon = 'fa-star';
                                                    break;
                                                case 'En Proceso': 
                                                    $estadoClass = 'bg-primary'; 
                                                    $estadoIcon = 'fa-cog';
                                                    break;
                                                case 'Enviada': 
                                                    $estadoClass = 'bg-warning text-dark'; 
                                                    $estadoIcon = 'fa-truck';
                                                    break;
                                                case 'Entregada': 
                                                    $estadoClass = 'bg-success'; 
                                                    $estadoIcon = 'fa-check-circle';
                                                    break;
                                            }
                                        ?>
                                        <span class="badge <?= $estadoClass ?>">
                                            <i class="fas <?= $estadoIcon ?> me-1"></i>
                                            <?= $this->escapeHtml($estado) ?>
                                        </span>
                                    </td>
                                    <td <?= $rowspan > 1 ? 'rowspan="'.$rowspan.'"' : '' ?>>
                                        <?php if (!empty($group['transportista'])): ?>
                                            <div>
                                                <span class="badge bg-light text-dark">
                                                    <i class="fas fa-truck me-1"></i>
                                                    <?= $this->escapeHtml($group['transportista']) ?>
                                                </span>
                                                <?php if (!empty($group['num_seguimiento'])): ?>
                                                    <div class="small text-muted mt-1">
                                                        <i class="fas fa-hashtag me-1"></i>
                                                        <?= $this->escapeHtml($group['num_seguimiento']) ?>
                                                    </div>
                                                <?php endif; ?>
                                            </div>
                                        <?php else: ?>
                                            <span class="badge bg-light text-secondary">Sin asignar</span>
                                        <?php endif; ?>
                                    </td>
                                    <?php endif; ?>
                                    
                                    <td class="text-center">
                                        <div class="btn-group">
                                            <a href="<?= $this->url('application', ['action' => 'order-detail', 'id' => $order['id'], 'table' => $table]) ?>" class="btn btn-sm btn-outline-primary" title="Ver detalle">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            <button type="button" class="btn btn-sm btn-outline-secondary dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">
                                                <span class="visually-hidden">Más acciones</span>
                                            </button>
                                            <ul class="dropdown-menu dropdown-menu-end">
                                                <li><a class="dropdown-item print-label-btn" href="#" data-id="<?= $this->escapeHtml($order['id']) ?>" data-table="<?= $this->escapeHtml($table) ?>">
                                                    <i class="fas fa-print me-2"></i> Imprimir etiqueta
                                                </a></li>
                                                <li><a class="dropdown-item generate-invoice-btn" href="#" data-id="<?= $this->escapeHtml($order['id']) ?>" data-table="<?= $this->escapeHtml($table) ?>">
                                                    <i class="fas fa-file-invoice me-2"></i> Imprimir boleta
                                                </a></li>
                                                <li><a class="dropdown-item generate-packing-btn" href="#" data-id="<?= $this->escapeHtml($order['id']) ?>" data-table="<?= $this->escapeHtml($table) ?>">
                                                    <i class="fas fa-box me-2"></i> Lista de empaque
                                                </a></li>
                                                <li><a class="dropdown-item generate-picking-btn" href="#" data-id="<?= $this->escapeHtml($order['id']) ?>" data-table="<?= $this->escapeHtml($table) ?>">
                                                    <i class="fas fa-clipboard-list me-2"></i> Lista de picking
                                                </a></li>
                                                <li><hr class="dropdown-divider"></li>
                                                <li><a class="dropdown-item duplicate-order-btn" href="#" data-id="<?= $this->escapeHtml($order['id']) ?>" data-table="<?= $this->escapeHtml($table) ?>">
                                                    <i class="fas fa-copy me-2"></i> Duplicar orden
                                                </a></li>
                                            </ul>
                                        </div>
                                    </td>
                                </tr>
                            <?php 
                                $first = false;
                                endforeach;
                            endforeach; 
                            ?>
                        <?php else: ?>
                            <tr>
                                <td colspan="<?= ($marketplace === 'TODOS') ? 11 : 10 ?>" class="text-center py-5">
                                    <div class="text-muted">
                                        <i class="fas fa-search fa-3x mb-3"></i>
                                        <h5>No se encontraron órdenes</h5>
                                        <p class="mb-2">Intenta con otros filtros o elimina los filtros actuales</p>
                                        <button type="button" class="btn btn-sm btn-outline-primary" id="clearAllFiltersBtn">
                                            <i class="fas fa-times-circle me-1"></i> Limpiar todos los filtros
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        <?php endif; ?>
                    </tbody>
                </table>
            </div>
            
            <!-- Paginación -->
            <?php if (isset($totalPages) && $totalPages > 1): ?>
                <div class="d-flex justify-content-between align-items-center p-3 border-top">
                    <div class="text-muted small">
                        Mostrando <?= count($orders) ?> de <?= $total ?? 0 ?> órdenes (página <?= $page ?> de <?= $totalPages ?>)
                    </div>
                    <div class="d-flex align-items-center">
                        <div class="me-3">
                            <select class="form-select form-select-sm" id="paginationLimit" style="width: auto;">
                                <option value="10" <?= $limit == 10 ? 'selected' : '' ?>>10 por página</option>
                                <option value="25" <?= $limit == 25 ? 'selected' : '' ?>>25 por página</option>
                                <option value="50" <?= $limit == 50 ? 'selected' : '' ?>>50 por página</option>
                                <option value="100" <?= $limit == 100 ? 'selected' : '' ?>>100 por página</option>
                            </select>
                        </div>
                        <nav aria-label="Navegación de páginas">
                            <ul class="pagination pagination-sm mb-0">
                                <li class="page-item <?= $page <= 1 ? 'disabled' : '' ?>">
                                    <a class="page-link" href="<?= $this->url(null, [], ['query' => array_merge($this->params()->fromQuery(), ['page' => $page - 1])], true) ?>" aria-label="Anterior">
                                        <span aria-hidden="true">&laquo;</span>
                                    </a>
                                </li>
                                
                                <?php
                                $start = max(1, $page - 2);
                                $end = min($totalPages, $page + 2);
                                
                                // Mostrar primera página si estamos lejos de ella
                                if ($start > 1): ?>
                                    <li class="page-item">
                                        <a class="page-link" href="<?= $this->url(null, [], ['query' => array_merge($this->params()->fromQuery(), ['page' => 1])], true) ?>">1</a>
                                    </li>
                                    <?php if ($start > 2): ?>
                                        <li class="page-item disabled">
                                            <span class="page-link">...</span>
                                        </li>
                                    <?php endif; ?>
                                <?php endif; ?>
                                
                                <?php for ($i = $start; $i <= $end; $i++): ?>
                                    <li class="page-item <?= $i == $page ? 'active' : '' ?>">
                                        <a class="page-link" href="<?= $this->url(null, [], ['query' => array_merge($this->params()->fromQuery(), ['page' => $i])], true) ?>"><?= $i ?></a>
                                    </li>
                                <?php endfor; ?>
                                
                                <?php
                                // Mostrar última página si estamos lejos de ella
                                if ($end < $totalPages): ?>
                                    <?php if ($end < $totalPages - 1): ?>
                                        <li class="page-item disabled">
                                            <span class="page-link">...</span>
                                        </li>
                                    <?php endif; ?>
                                    <li class="page-item">
                                        <a class="page-link" href="<?= $this->url(null, [], ['query' => array_merge($this->params()->fromQuery(), ['page' => $totalPages])], true) ?>"><?= $totalPages ?></a>
                                    </li>
                                <?php endif; ?>
                                
                                <li class="page-item <?= $page >= $totalPages ? 'disabled' : '' ?>">
                                    <a class="page-link" href="<?= $this->url(null, [], ['query' => array_merge($this->params()->fromQuery(), ['page' => $page + 1])], true) ?>" aria-label="Siguiente">
                                        <span aria-hidden="true">&raquo;</span>
                                    </a>
                                </li>
                            </ul>
                        </nav>
                    </div>
                </div>
            <?php endif; ?>
        </div>
    </div>
</div>

<!-- Modal para ver productos de una orden -->
<div class="modal fade" id="viewProductsModal" tabindex="-1" aria-labelledby="viewProductsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="viewProductsModalLabel">
                    <i class="fas fa-box me-2"></i>Productos de la Orden
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="text-center py-4" id="productsLoader">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Cargando...</span>
                    </div>
                    <p class="mt-2">Cargando productos...</p>
                </div>
                <div id="productsContent" style="display: none;">
                    <div class="alert alert-info mb-3">
                        <div class="row">
                            <div class="col-md-4">
                                <strong><i class="fas fa-hashtag me-1"></i>Orden:</strong> <span id="productOrderId"></span>
                            </div>
                            <div class="col-md-4">
                                <strong><i class="fas fa-user me-1"></i>Cliente:</strong> <span id="productOrderClient"></span>
                            </div>
                            <div class="col-md-4">
                                <strong><i class="fas fa-receipt me-1"></i>Boleta:</strong> <span id="productBoletaId"></span>
                            </div>
                        </div>
                    </div>
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th>SKU</th>
                                    <th>Producto</th>
                                    <th>Precio</th>
                                    <th>Cantidad</th>
                                    <th>Subtotal</th>
                                </tr>
                            </thead>
                            <tbody id="productsTableBody">
                                <!-- Aquí se cargarán dinámicamente los productos -->
                            </tbody>
                            <tfoot>
                                <tr>
                                    <td colspan="4" class="text-end fw-bold">Subtotal:</td>
                                    <td id="productsTotalPrice" class="fw-bold"></td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
                <div id="productsError" class="alert alert-danger" style="display: none;">
                    <i class="fas fa-exclamation-circle me-2"></i>
                    <span id="productsErrorMessage">Error al cargar productos</span>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btn-primary" id="printProductsBtn">
                    <i class="fas fa-print me-1"></i> Imprimir
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Modal para sincronizar órdenes -->
<div class="modal fade" id="syncOrdersModal" tabindex="-1" aria-labelledby="syncOrdersModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="syncOrdersModalLabel">
                    <i class="fas fa-sync-alt me-2"></i>Sincronizar Órdenes
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="syncOrdersForm">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="syncMarketplace" class="form-label">Marketplace</label>
                            <select class="form-select" id="syncMarketplace" name="marketplace">
                                <option value="all" selected>Todos los marketplaces</option>
                                <?php foreach ($marketplaceDetails as $key => $details): ?>
                                <option value="<?= $key ?>"><?= $details['name'] ?></option>
                                <?php endforeach; ?>
                            </select>
                        </div>
                        <div class="col-md-6">
                            <label for="syncPeriod" class="form-label">Período</label>
                            <select class="form-select" id="syncPeriod" name="period">
                                <option value="today">Hoy</option>
                                <option value="yesterday">Ayer</option>
                                <option value="last3days" selected>Últimos 3 días</option>
                                <option value="lastweek">Última semana</option>
                                <option value="lastmonth">Último mes</option>
                                <option value="custom">Personalizado</option>
                            </select>
                        </div>
                    </div>
                    
                    <div class="row mb-3" id="customDateRange" style="display: none;">
                        <div class="col-md-6">
                            <label for="syncStartDate" class="form-label">Fecha inicial</label>
                            <input type="date" class="form-control" id="syncStartDate" name="syncStartDate">
                        </div>
                        <div class="col-md-6">
                            <label for="syncEndDate" class="form-label">Fecha final</label>
                            <input type="date" class="form-control" id="syncEndDate" name="syncEndDate">
                        </div>
                    </div>
                    
                    <div class="form-check mb-3">
                        <input class="form-check-input" type="checkbox" id="syncOverwrite" name="overwrite" value="1">
                        <label class="form-check-label" for="syncOverwrite">
                            Sobrescribir órdenes existentes
                        </label>
                    </div>
                </form>
                
                <div id="syncProgress" style="display: none;">
                    <div class="progress mb-3">
                        <div class="progress-bar progress-bar-striped progress-bar-animated" id="syncProgressBar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%"></div>
                    </div>
                    <div class="d-flex justify-content-between">
                        <small id="syncProgressText">Preparando sincronización...</small>
                        <small id="syncProgressCount">0/0</small>
                    </div>
                </div>
                
                <div id="syncResultContainer" style="display: none;">
                    <h6 class="mt-4 mb-3">Resultados de la sincronización</h6>
                    <div class="table-responsive">
                        <table class="table table-sm table-bordered">
                            <thead>
                                <tr>
                                    <th>Marketplace</th>
                                    <th>Nuevas</th>
                                    <th>Actualizadas</th>
                                    <th>Fallidas</th>
                                </tr>
                            </thead>
                            <tbody id="syncResultsBody">
                                <!-- Resultados de sincronización -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" id="closeSyncBtn">Cerrar</button>
                <button type="button" class="btn btn-primary" id="startSyncBtn">
                    <i class="fas fa-sync me-1"></i> Iniciar Sincronización
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Modal de ayuda -->
<div class="modal fade" id="helpModal" tabindex="-1" aria-labelledby="helpModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="helpModalLabel">
                    <i class="fas fa-info-circle me-2"></i>Ayuda y solución de problemas
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="alert alert-warning">
                    <h5><i class="fas fa-exclamation-triangle me-2"></i>Errores conocidos</h5>
                    <p>Se han detectado los siguientes errores en el sistema:</p>
                </div>
                
                <div class="accordion" id="errorAccordion">
                    <div class="accordion-item">
                        <h2 class="accordion-header">
                            <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#errorOne">
                                Error al generar etiquetas
                            </button>
                        </h2>
                        <div id="errorOne" class="accordion-collapse collapse show" data-bs-parent="#errorAccordion">
                            <div class="accordion-body">
                                <p>El error <code>No se encontraron etiquetas para las órdenes seleccionadas</code> ocurre cuando:</p>
                                <ul>
                                    <li>Las órdenes no tienen asignado un transportista</li>
                                    <li>El sistema no puede encontrar plantillas de etiquetas para el transportista asignado</li>
                                </ul>
                                <p><strong>Solución:</strong> Contacte con soporte técnico para configurar plantillas de etiquetas.</p>
                            </div>
                        </div>
                    </div>
                    
                    <div class="accordion-item">
                        <h2 class="accordion-header">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#errorTwo">
                                Error en boletas/facturas
                            </button>
                        </h2>
                        <div id="errorTwo" class="accordion-collapse collapse" data-bs-parent="#errorAccordion">
                            <div class="accordion-body">
                                <p>El error <code>Unknown column 'boleta_url' in 'field list'</code> indica un problema en la estructura de la base de datos.</p>
                                <p><strong>Solución:</strong> Es necesario ejecutar la siguiente consulta SQL:</p>
                                <pre><code>ALTER TABLE órdenes ADD COLUMN boleta_url VARCHAR(255) DEFAULT NULL AFTER boleta_id;</code></pre>
                            </div>
                        </div>
                    </div>
                    
                    <div class="accordion-item">
                        <h2 class="accordion-header">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#errorThree">
                                Error en listas de empaque y picking
                            </button>
                        </h2>
                        <div id="errorThree" class="accordion-collapse collapse" data-bs-parent="#errorAccordion">
                            <div class="accordion-body">
                                <p>Existen dos errores principales:</p>
                                <ul>
                                    <li><code>Class "Picqer\Barcode\BarcodeGeneratorPNG" not found</code>: Falta la biblioteca para generar códigos de barras.</li>
                                    <li><code>str_pad(): Argument #1 ($string) must be of type string, int given</code>: Error en el formato de datos.</li>
                                </ul>
                                <p><strong>Solución:</strong> Es necesario instalar la dependencia faltante con el comando:</p>
                                <pre><code>composer require picqer/php-barcode-generator</code></pre>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>

<!-- Loader -->
<div class="position-fixed top-0 start-0 w-100 h-100 d-flex justify-content-center align-items-center bg-white bg-opacity-75" id="loader" style="z-index: 9999; display: none;">
    <div class="spinner-border text-primary" role="status">
        <span class="visually-hidden">Cargando...</span>
    </div>
</div>

<!-- Toast container -->
<div class="toast-container position-fixed bottom-0 end-0 p-3"></div>

<!-- Estilos adicionales -->
<style>
/* Estilos para grupos de boletas */
.boleta-group-start {
    border-top: 2px solid #007bff;
}

.boleta-group-item {
    background-color: rgba(0, 123, 255, 0.03);
}

/* Estilos para toast */
.toast {
    border: 0;
    box-shadow: 0 0.25rem 0.75rem rgba(0, 0, 0, 0.15);
}

/* Estilos para la tabla */
.table-hover tbody tr:hover {
    background-color: rgba(0, 123, 255, 0.05);
}

.table tbody tr.selected {
    background-color: rgba(0, 123, 255, 0.1);
}

/* Estilos para avatares */
.avatar {
    width: 36px;
    height: 36px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
}

.badge {
    font-weight: 500;
    padding: 0.35em 0.65em;
    font-size: 0.85em;
}
</style>

<!-- JavaScript para la funcionalidad -->
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Variables y elementos globales
    const selectAllCheckbox = document.getElementById('selectAllOrders');
    const orderCheckboxes = document.querySelectorAll('.order-checkbox');
    const bulkActionsBtn = document.getElementById('bulkActionsBtn');
    const selectedCountBadge = document.getElementById('selectedCount');
    const refreshListBtn = document.getElementById('refreshListBtn');
    const clearFiltersBtn = document.getElementById('clearFiltersBtn');
    const clearAllFiltersBtn = document.getElementById('clearAllFiltersBtn');
    const paginationLimitSelect = document.getElementById('paginationLimit');
    const statusFilterSelect = document.getElementById('statusFilter');
    const startDateInput = document.getElementById('startDate');
    const endDateInput = document.getElementById('endDate');
    const applyDateFilterBtn = document.getElementById('applyDateFilter');
    
    // Modales
    const syncOrdersModal = new bootstrap.Modal(document.getElementById('syncOrdersModal'));
    const viewProductsModal = new bootstrap.Modal(document.getElementById('viewProductsModal'));
    const helpModal = new bootstrap.Modal(document.getElementById('helpModal'));
    
    // Inicializar tooltips
    const tooltips = document.querySelectorAll('[data-bs-toggle="tooltip"]');
    tooltips.forEach(tooltip => new bootstrap.Tooltip(tooltip));
    
    // ===== SELECCIÓN DE ÓRDENES =====
    
    // Seleccionar todas las órdenes
    if (selectAllCheckbox) {
        selectAllCheckbox.addEventListener('change', function() {
            orderCheckboxes.forEach(checkbox => {
                checkbox.checked = this.checked;
            });
            
            updateSelectedOrdersCount();
            updateSelectedRows();
        });
    }
    
    // Seleccionar órdenes individuales
    orderCheckboxes.forEach(checkbox => {
        checkbox.addEventListener('change', function() {
            // Actualizar "seleccionar todos" si todas las casillas están marcadas
            if (document.querySelectorAll('.order-checkbox:checked').length === orderCheckboxes.length) {
                selectAllCheckbox.checked = true;
            } else {
                selectAllCheckbox.checked = false;
            }
            
            updateSelectedOrdersCount();
            updateSelectedRows();
        });
    });
    
    // Actualizar contador de órdenes seleccionadas
    function updateSelectedOrdersCount() {
        const selectedCount = document.querySelectorAll('.order-checkbox:checked').length;
        
        selectedCountBadge.textContent = selectedCount;
        
        if (selectedCount > 0) {
            bulkActionsBtn.removeAttribute('disabled');
        } else {
            bulkActionsBtn.setAttribute('disabled', 'disabled');
        }
    }
    
    // Resaltar filas seleccionadas
    function updateSelectedRows() {
        document.querySelectorAll('tr[data-id]').forEach(row => {
            const checkbox = row.querySelector('.order-checkbox');
            if (checkbox && checkbox.checked) {
                row.classList.add('selected');
            } else {
                row.classList.remove('selected');
            }
        });
    }
    
    // ===== FILTROS =====
    
    // Filtro de estado
    if (statusFilterSelect) {
        statusFilterSelect.addEventListener('change', function() {
            applyFilters();
        });
    }
    
    // Filtro de fecha
    if (applyDateFilterBtn) {
        applyDateFilterBtn.addEventListener('click', function() {
            applyFilters();
        });
    }
    
    // Aplicar todos los filtros
    function applyFilters() {
        const currentUrl = new URL(window.location.href);
        
        // Estado
        if (statusFilterSelect && statusFilterSelect.value) {
            currentUrl.searchParams.set('status', statusFilterSelect.value);
        } else if (statusFilterSelect) {
            currentUrl.searchParams.delete('status');
        }
        
        // Fecha inicial
        if (startDateInput && startDateInput.value) {
            currentUrl.searchParams.set('startDate', startDateInput.value);
        } else if (startDateInput) {
            currentUrl.searchParams.delete('startDate');
        }
        
        // Fecha final
        if (endDateInput && endDateInput.value) {
            currentUrl.searchParams.set('endDate', endDateInput.value);
        } else if (endDateInput) {
            currentUrl.searchParams.delete('endDate');
        }
        
        // Volver a la primera página
        currentUrl.searchParams.set('page', '1');
        
        // Redireccionar
        window.location.href = currentUrl.toString();
    }
    
    // Limpiar filtros
    if (clearFiltersBtn) {
        clearFiltersBtn.addEventListener('click', function() {
            if (statusFilterSelect) statusFilterSelect.value = '';
            if (startDateInput) startDateInput.value = '';
            if (endDateInput) endDateInput.value = '';
            
            applyFilters();
        });
    }
    
    // Limpiar todos los filtros
    if (clearAllFiltersBtn) {
        clearAllFiltersBtn.addEventListener('click', function() {
            const baseUrl = window.location.href.split('?')[0];
            window.location.href = baseUrl;
        });
    }
    
    // ===== PAGINACIÓN =====
    
    // Cambiar elementos por página
    if (paginationLimitSelect) {
        paginationLimitSelect.addEventListener('change', function() {
            const currentUrl = new URL(window.location.href);
            currentUrl.searchParams.set('limit', this.value);
            currentUrl.searchParams.set('page', '1');
            window.location.href = currentUrl.toString();
        });
    }
    
    // ===== ACCIONES =====
    
    // Obtener órdenes seleccionadas
    function getSelectedOrders() {
        const selectedOrders = [];
        
        document.querySelectorAll('.order-checkbox:checked').forEach(checkbox => {
            selectedOrders.push({
                id: checkbox.value,
                marketplace: checkbox.dataset.marketplace
            });
        });
        
        return selectedOrders;
    }
    
    // Acciones masivas
    const actionButtons = {
        'printLabelsBtn': 'print-labels',
        'generateInvoiceBtn': 'print-invoice',
        'generateManifestBtn': 'generate-manifest',
        'generatePackingBtn': 'generate-packing',
        'generatePickingBtn': 'generate-picking',
        'exportCsvBtn': 'export-csv',
        'exportExcelBtn': 'export-excel'
    };
    
    // Configurar botones de acción masiva
    Object.keys(actionButtons).forEach(buttonId => {
        const button = document.getElementById(buttonId);
        if (button) {
            button.addEventListener('click', function(e) {
                e.preventDefault();
                
                const selectedOrders = getSelectedOrders();
                if (selectedOrders.length === 0) {
                    showToast('Por favor, selecciona al menos una orden.', 'warning');
                    return;
                }
                
                // Ejecutar la acción
                submitBulkAction(selectedOrders, actionButtons[buttonId]);
            });
        }
    });
    
    // Enviar acción masiva
    function submitBulkAction(selectedOrders, action) {
        showLoader();
        
        // Crear formulario
        const form = document.createElement('form');
        form.method = 'POST';
        form.action = '<?= $this->url('application', ['action' => 'bulk-orders']) ?>';
        
        // Abrir en nueva pestaña para documentos
        if (['print-labels', 'print-invoice', 'generate-manifest', 'generate-packing', 'generate-picking'].includes(action)) {
            form.target = '_blank';
        }
        
        // Agregar ids de órdenes
        selectedOrders.forEach(order => {
            const input = document.createElement('input');
            input.type = 'hidden';
            input.name = 'orderIds[]';
            input.value = order.id;
            form.appendChild(input);
        });
        
        // Agregar tabla/marketplace
        const tableInput = document.createElement('input');
        tableInput.type = 'hidden';
        tableInput.name = 'table';
        tableInput.value = '<?= $this->escapeJs($table) ?>';
        form.appendChild(tableInput);
        
        // Agregar acción
        const actionInput = document.createElement('input');
        actionInput.type = 'hidden';
        actionInput.name = 'action';
        actionInput.value = action;
        form.appendChild(actionInput);
        
        // Enviar formulario
        document.body.appendChild(form);
        form.submit();
        
        // Limpiar
        setTimeout(() => {
            document.body.removeChild(form);
            hideLoader();
        }, 1000);
    }
    
    // Configurar botones de acción individual
    document.querySelectorAll('.print-label-btn, .generate-invoice-btn, .generate-packing-btn, .generate-picking-btn').forEach(btn => {
        btn.addEventListener('click', function(e) {
            e.preventDefault();
            
            const orderId = this.dataset.id;
            const table = this.dataset.table;
            let action;
            
            // Determinar acción según clase
            if (this.classList.contains('print-label-btn')) {
                action = 'print-labels';
            } else if (this.classList.contains('generate-invoice-btn')) {
                action = 'print-invoice';
            } else if (this.classList.contains('generate-packing-btn')) {
                action = 'generate-packing';
            } else if (this.classList.contains('generate-picking-btn')) {
                action = 'generate-picking';
            }
            
            // Crear formulario
            const form = document.createElement('form');
            form.method = 'POST';
            form.action = '<?= $this->url('application', ['action' => 'bulk-orders']) ?>';
            form.target = '_blank';
            
            // Agregar id de orden
            const orderIdInput = document.createElement('input');
            orderIdInput.type = 'hidden';
            orderIdInput.name = 'orderIds[]';
            orderIdInput.value = orderId;
            form.appendChild(orderIdInput);
            
            // Agregar tabla/marketplace
            const tableInput = document.createElement('input');
            tableInput.type = 'hidden';
            tableInput.name = 'table';
            tableInput.value = table;
            form.appendChild(tableInput);
            
            // Agregar acción
            const actionInput = document.createElement('input');
            actionInput.type = 'hidden';
            actionInput.name = 'action';
            actionInput.value = action;
            form.appendChild(actionInput);
            
            // Enviar formulario
            document.body.appendChild(form);
            form.submit();
            document.body.removeChild(form);
        });
    });
    
    // Duplicar orden
    document.querySelectorAll('.duplicate-order-btn').forEach(btn => {
        btn.addEventListener('click', function(e) {
            e.preventDefault();
            
            const orderId = this.dataset.id;
            const table = this.dataset.table;
            
            if (confirm('¿Estás seguro de que deseas duplicar esta orden?')) {
                showLoader();
                
                // Enviar solicitud
                fetch('<?= $this->url('application', ['action' => 'duplicate-order']) ?>', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        orderId: orderId,
                        table: table
                    })
                })
                .then(response => response.json())
                .then(data => {
                    hideLoader();
                    
                    if (data.success) {
                        showToast('Orden duplicada correctamente.', 'success');
                        setTimeout(() => {
                            window.location.reload();
                        }, 1000);
                    } else {
                        showToast('Error: ' + (data.message || 'No se pudo duplicar la orden.'), 'error');
                    }
                })
                .catch(error => {
                    hideLoader();
                    showToast('Error de comunicación con el servidor.', 'error');
                    console.error(error);
                });
            }
        });
    });
    
    // Ver productos
    document.querySelectorAll('.view-products-btn').forEach(btn => {
        btn.addEventListener('click', function() {
            const orderId = this.dataset.id;
            
            // Mostrar modal y loader
            viewProductsModal.show();
            document.getElementById('productsLoader').style.display = 'block';
            document.getElementById('productsContent').style.display = 'none';
            document.getElementById('productsError').style.display = 'none';
            
            // Cargar datos de productos
            fetch('<?= $this->url('application', ['action' => 'get-order-products']) ?>?id=' + orderId + '&table=<?= $this->escapeJs($table) ?>')
            .then(response => response.json())
            .then(data => {
                document.getElementById('productsLoader').style.display = 'none';
                
                if (data.success) {
                    document.getElementById('productsContent').style.display = 'block';
                    
                    // Mostrar información general
                    document.getElementById('productOrderId').textContent = '#' + orderId;
                    document.getElementById('productOrderClient').textContent = data.cliente || 'N/A';
                    document.getElementById('productBoletaId').textContent = data.boletaId || 'N/A';
                    
                    // Mostrar productos
                    const tbody = document.getElementById('productsTableBody');
                    tbody.innerHTML = '';
                    
                    let total = 0;
                    
                    if (data.productos && data.productos.length > 0) {
                        data.productos.forEach(producto => {
                            const subtotal = (producto.precio * producto.cantidad);
                            total += subtotal;
                            
                            const row = document.createElement('tr');
                            row.innerHTML = `
                                <td>${producto.sku || 'N/A'}</td>
                                <td>${producto.nombre || 'Producto sin nombre'}</td>
                                <td>${numero_formato(producto.precio)}</td>
                                <td>${producto.cantidad}</td>
                                <td>${numero_formato(subtotal)}</td>
                            `;
                            tbody.appendChild(row);
                        });
                    } else {
                        const row = document.createElement('tr');
                        row.innerHTML = `
                            <td colspan="5" class="text-center text-muted py-3">No se encontraron productos para esta orden</td>
                        `;
                        tbody.appendChild(row);
                    }
                    
                    // Mostrar total
                    document.getElementById('productsTotalPrice').textContent = ' + numero_formato(total);
                } else {
                    document.getElementById('productsError').style.display = 'block';
                    document.getElementById('productsErrorMessage').textContent = data.message || 'Error al cargar los productos.';
                }
            })
            .catch(error => {
                document.getElementById('productsLoader').style.display = 'none';
                document.getElementById('productsError').style.display = 'block';
                document.getElementById('productsErrorMessage').textContent = 'Error de comunicación con el servidor.';
                console.error(error);
            });
        });
    });
    
    // Imprimir productos
    document.getElementById('printProductsBtn').addEventListener('click', function() {
        const printWindow = window.open('', '_blank');
        
        const content = document.getElementById('productsContent').cloneNode(true);
        
        const html = `
            <!DOCTYPE html>
            <html>
            <head>
                <title>Productos de la Orden</title>
                <meta charset="utf-8">
                <meta name="viewport" content="width=device-width, initial-scale=1">
                <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
                <style>
                    body { padding: 20px; }
                    @media print {
                        .no-print { display: none; }
                        body { padding: 0; }
                        .table { width: 100%; border-collapse: collapse; }
                        .table th, .table td { border: 1px solid #ddd; padding: 8px; }
                    }
                </style>
            </head>
            <body>
                <div class="container">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h1>Productos de la Orden</h1>
                        <button class="btn btn-primary no-print" onclick="window.print()">Imprimir</button>
                    </div>
                    ${content.outerHTML}
                </div>
            </body>
            </html>
        `;
        
        printWindow.document.open();
        printWindow.document.write(html);
        printWindow.document.close();
    });
    
    // Sincronización de órdenes
    document.getElementById('syncOrdersBtn').addEventListener('click', function() {
        syncOrdersModal.show();
    });
    
    // Período personalizado en sincronización
    document.getElementById('syncPeriod').addEventListener('change', function() {
        const customDateRange = document.getElementById('customDateRange');
        if (this.value === 'custom') {
            customDateRange.style.display = 'flex';
        } else {
            customDateRange.style.display = 'none';
        }
    });
    
    // Iniciar sincronización
    document.getElementById('startSyncBtn').addEventListener('click', function() {
        const form = document.getElementById('syncOrdersForm');
        const formData = new FormData(form);
        
        // Mostrar progreso
        document.getElementById('syncProgress').style.display = 'block';
        document.getElementById('syncResultContainer').style.display = 'none';
        
        const progressBar = document.getElementById('syncProgressBar');
        const progressText = document.getElementById('syncProgressText');
        const progressCount = document.getElementById('syncProgressCount');
        
        // Simular progreso (esto debería ser reemplazado por una solicitud real)
        let progress = 0;
        const interval = setInterval(() => {
            progress += 5;
            if (progress <= 100) {
                progressBar.style.width = progress + '%';
                progressBar.setAttribute('aria-valuenow', progress);
                progressCount.textContent = Math.floor(progress / 5) + '/20';
                
                if (progress < 30) {
                    progressText.textContent = 'Conectando con API del marketplace...';
                } else if (progress < 60) {
                    progressText.textContent = 'Descargando órdenes...';
                } else if (progress < 90) {
                    progressText.textContent = 'Actualizando base de datos...';
                } else {
                    progressText.textContent = 'Finalizando sincronización...';
                }
            } else {
                clearInterval(interval);
                
                // Mostrar resultados
                document.getElementById('syncResultsBody').innerHTML = `
                    <tr>
                        <td>Todos los marketplaces</td>
                        <td>5</td>
                        <td>12</td>
                        <td>0</td>
                    </tr>
                `;
                document.getElementById('syncResultContainer').style.display = 'block';
                
                showToast('Sincronización completada correctamente.', 'success');
            }
        }, 300);
    });
    
    // Actualizar lista
    if (refreshListBtn) {
        refreshListBtn.addEventListener('click', function() {
            window.location.reload();
        });
    }
    
    // ===== UTILIDADES =====
    
    // Mostrar loader
    function showLoader() {
        document.getElementById('loader').style.display = 'flex';
    }
    
    // Ocultar loader
    function hideLoader() {
        document.getElementById('loader').style.display = 'none';
    }
    
    // Mostrar toast
    function showToast(message, type = 'info') {
        const toastContainer = document.querySelector('.toast-container');
        
        const toastElement = document.createElement('div');
        toastElement.className = 'toast';
        toastElement.setAttribute('role', 'alert');
        toastElement.setAttribute('aria-live', 'assertive');
        toastElement.setAttribute('aria-atomic', 'true');
        
        // Determinar color según tipo
        let bgColor = 'bg-info';
        let icon = 'info-circle';
        
        switch (type) {
            case 'success':
                bgColor = 'bg-success';
                icon = 'check-circle';
                break;
            case 'warning':
                bgColor = 'bg-warning';
                icon = 'exclamation-triangle';
                break;
            case 'error':
                bgColor = 'bg-danger';
                icon = 'exclamation-circle';
                break;
        }
        
        toastElement.innerHTML = `
            <div class="toast-header ${bgColor} text-white">
                <i class="fas fa-${icon} me-2"></i>
                <strong class="me-auto">Notificación</strong>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body">
                ${message}
            </div>
        `;
        
        toastContainer.appendChild(toastElement);
        
        const toast = new bootstrap.Toast(toastElement, {
            delay: 5000
        });
        
        toast.show();
        
        // Eliminar toast después de ocultarse
        toastElement.addEventListener('hidden.bs.toast', () => {
            toastElement.remove();
        });
    }
    
    // Formatear números
    function numero_formato(numero) {
        return new Intl.NumberFormat('es-CL').format(numero);
    }
    
    // Inicializar contador de seleccionados
    updateSelectedOrdersCount();
    
    // Mostrar mensaje de errores conocidos si hay errores en los parámetros de URL
    const urlParams = new URLSearchParams(window.location.search);
    if (urlParams.has('error')) {
        setTimeout(() => {
            helpModal.show();
        }, 1000);
    }
});
</script>

<?php
// Función auxiliar para convertir hex a rgb
function hexToRgb($hex) {
    // Eliminar # si está presente
    $hex = ltrim($hex, '#');
    
    // Convertir a RGB
    $r = hexdec(substr($hex, 0, 2));
    $g = hexdec(substr($hex, 2, 2));
    $b = hexdec(substr($hex, 4, 2));
    
    return "$r, $g, $b";
}
?>